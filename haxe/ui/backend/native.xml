<?xml version="1.0" encoding="utf-8" ?>
<native>
    <component id="haxe.ui.containers.ListView" class="haxe.ui.backend.hxwidgets.custom.SimpleListView" creator="haxe.ui.backend.hxwidgets.creators.ListViewCreator" allowChildren="false">
        <behaviour id="dataSource" class="haxe.ui.backend.hxwidgets.behaviours.ListViewDataSource" />
        <behaviour id="selectedIndex" class="haxe.ui.backend.hxwidgets.behaviours.ListViewSelectedIndex" />
        <behaviour id="selectedIndices" class="haxe.ui.backend.hxwidgets.behaviours.ListViewSelectedIndices" />
        <behaviour id="contentLayoutName" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="selectedItem" class="haxe.ui.backend.hxwidgets.behaviours.DataComponentSelectedItem" />
        <behaviour id="selectedItems" class="haxe.ui.backend.hxwidgets.behaviours.DataComponentSelectedItems" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.WindowSize" includePadding="false" />
        <event id="change" native="EventType.LIST_ITEM_SELECTED" />
    </component>
    <component id="haxe.ui.containers.TableView" class="hx.widgets.DataViewListCtrl" constructor="$style" style="DataViewCtrlStyle.DV_ROW_LINES">
        <behaviour id="selectedIndex" class="haxe.ui.backend.hxwidgets.behaviours.DataViewListCtrlSelectedRow" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="dataSource" class="haxe.ui.backend.hxwidgets.behaviours.TableViewDataSource" />
        <behaviour id="contentLayoutName" class="haxe.ui.behaviours.DefaultBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.WindowSize" includePadding="false" />
        <builder class="haxe.ui.backend.hxwidgets.builders.TableViewBuilder" />
        <event id="change" native="EventType.DATAVIEW_SELECTION_CHANGED" />
    </component>    
    <component id="haxe.ui.containers.Header" creator="haxe.ui.backend.hxwidgets.creators.NullWindowCreator" />
    <component id="haxe.ui.components.Column" creator="haxe.ui.backend.hxwidgets.creators.NullWindowCreator" allowChildren="false" />
    <component id="haxe.ui.containers.TreeView" class="hx.widgets.DataViewTreeCtrl" constructor="$style">
        <behaviour id="contentLayoutName" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="addNode" class="haxe.ui.backend.hxwidgets.behaviours.TreeViewAddNode" />
        <behaviour id="removeNode" class="haxe.ui.backend.hxwidgets.behaviours.TreeViewRemoveNode" />
        <behaviour id="clearNodes" class="haxe.ui.backend.hxwidgets.behaviours.TreeViewClearNodes" />
        <behaviour id="selectedNode" class="haxe.ui.backend.hxwidgets.behaviours.TreeViewSelectedNode" />
        <behaviour id="getNodesInternal" class="haxe.ui.backend.hxwidgets.behaviours.TreeViewGetNodesInternal" />
        <size class="haxe.ui.backend.hxwidgets.size.WindowSize" includePadding="false" />
        <builder class="haxe.ui.backend.hxwidgets.builders.TreeViewBuilder" />
        <event id="change" native="EventType.DATAVIEW_SELECTION_CHANGED" />
    </component>    
    <component id="haxe.ui.containers.TreeViewNode" class="hx.widgets.Object">
        <behaviour id="addNode" class="haxe.ui.backend.hxwidgets.behaviours.TreeViewAddNode" />
        <behaviour id="removeNode" class="haxe.ui.backend.hxwidgets.behaviours.TreeViewRemoveNode" />
        <behaviour id="clearNodes" class="haxe.ui.backend.hxwidgets.behaviours.TreeViewClearNodes" />
        <builder class="haxe.ui.backend.hxwidgets.builders.TreeViewNodeBuilder" />
    </component>
    <component id="haxe.ui.components.HScroll" class="hx.widgets.ScrollBar" constructor="$style" allowChildren="false" style="ScrollBarStyle.HORIZONTAL">
        <behaviour id="pos" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
    </component>
    <component id="haxe.ui.components.VScroll" class="hx.widgets.ScrollBar" constructor="$style" allowChildren="false" style="ScrollBarStyle.VERTICAL">
        <behaviour id="pos" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
    </component>
    <component id="haxe.ui.components.DropDown" class="hx.widgets.Choice" allowChildren="false" creator="none">
        <behaviour id="text" class="haxe.ui.backend.hxwidgets.behaviours.ChoiceSelectedLabel" />
        <behaviour id="dataSource" class="haxe.ui.backend.hxwidgets.behaviours.ChoiceDataSource" />
        <behaviour id="selectedIndex" class="haxe.ui.backend.hxwidgets.behaviours.ChoiceSelectedIndex" />
        <behaviour id="selectedItem" class="haxe.ui.backend.hxwidgets.behaviours.DataComponentSelectedItem" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <handler class="haxe.ui.backend.hxwidgets.handlers.ChoiceHandler" />
        <event id="change" native="EventType.CHOICE" />
    </component>
    
    
    
    <component id="haxe.ui.containers.dialogs.Dialog" class="hx.widgets.Dialog" creator="haxe.ui.backend.hxwidgets.creators.DialogCreator">
        <size class="haxe.ui.backend.hxwidgets.size.DialogSize" />
    </component>
    <component id="haxe.ui.components.Label" class="haxe.ui.backend.hxwidgets.custom.TransparentStaticText" allowChildren="false">
        <behaviour id="text" class="haxe.ui.backend.hxwidgets.behaviours.ControlLabel" />
        <behaviour id="htmlText" class="haxe.ui.backend.hxwidgets.behaviours.ControlMarkupLabel" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlLabel" />
        <behaviour id="allowInteraction" class="haxe.ui.backend.hxwidgets.behaviours.AllowInteraction" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <handler class="haxe.ui.backend.hxwidgets.handlers.StaticTextHandler" />
    </component>
    <component id="haxe.ui.components.Link" class="hx.widgets.HyperlinkCtrl" allowChildren="false">
        <behaviour id="text" class="haxe.ui.backend.hxwidgets.behaviours.ControlLabel" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlLabel" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <handler class="haxe.ui.backend.hxwidgets.handlers.LinkHandler" />
        <event id="click" native="EventType.HYPERLINK" class="haxe.ui.events.MouseEvent" />
    </component>
    <component id="haxe.ui.components.Image" class="haxe.ui.backend.hxwidgets.custom.TransparentStaticBitmap" creator="haxe.ui.backend.hxwidgets.creators.StaticBitmapCreator" allowChildren="false">
        <behaviour id="resource" class="haxe.ui.backend.hxwidgets.behaviours.ControlBitmap" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlBitmap" />
        <behaviour id="allowInteraction" class="haxe.ui.backend.hxwidgets.behaviours.AllowInteraction" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <behaviour id="scaleMode" class="haxe.ui.backend.hxwidgets.behaviours.ImageScaleMode" />
        <behaviour id="imageScale" class="haxe.ui.behaviours.DefaultBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <builder class="haxe.ui.backend.hxwidgets.builders.ImageBuilder" />
    </component>
    <component id="haxe.ui.components.Button" allowChildren="false" creator="haxe.ui.backend.hxwidgets.creators.ButtonCreator">
        <behaviour id="text" class="haxe.ui.backend.hxwidgets.behaviours.ControlLabel" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlLabel" />
        <behaviour id="icon" class="haxe.ui.backend.hxwidgets.behaviours.ControlBitmap" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <behaviour id="selected" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="toggle" class="haxe.ui.behaviours.DefaultBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <handler class="haxe.ui.backend.hxwidgets.handlers.ButtonHandler" />
        <event id="click" native="EventType.BUTTON" class="haxe.ui.events.MouseEvent" />
        <event id="change" native="EventType.TOGGLEBUTTON" class="haxe.ui.events.UIEvent" />
    </component>
    <component id="haxe.ui.components.Switch" class="hx.widgets.ToggleButton" allowChildren="false">
        <behaviour id="text" class="haxe.ui.backend.hxwidgets.behaviours.ControlLabel" />
        <behaviour id="selected" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <handler class="haxe.ui.backend.hxwidgets.handlers.ReflectionHandler" event="EventType.TOGGLEBUTTON" sourceProp="value" targetProp="selected" />
    </component>
    <component id="haxe.ui.components.CheckBox" class="hx.widgets.CheckBox" allowChildren="false">
        <behaviour id="text" class="haxe.ui.backend.hxwidgets.behaviours.ControlLabel" />
        <behaviour id="selected" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <event id="change" native="EventType.CHECKBOX" />
    </component>
    <component id="haxe.ui.components.OptionBox" class="hx.widgets.RadioButton" creator="haxe.ui.backend.hxwidgets.creators.RadioButtonCreator" constructor="null, $style" allowChildren="false">
        <behaviour id="text" class="haxe.ui.backend.hxwidgets.behaviours.ControlLabel" />
        <behaviour id="selected" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <event id="change" native="EventType.RADIOBUTTON" />
    </component>
    <component id="haxe.ui.components.TextField" class="hx.widgets.TextCtrl" creator="haxe.ui.backend.hxwidgets.creators.TextCtrlCreator" constructor="null, $style"  allowChildren="false">
        <behaviour id="text" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="password" class="haxe.ui.backend.hxwidgets.behaviours.TextCtrlPassword" />
        <behaviour id="placeholder" class="haxe.ui.backend.hxwidgets.behaviours.TextCtrlPlaceholder" />
        <behaviour id="icon" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="restrictChars" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="maxChars" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <event id="change" native="EventType.TEXT" />
        <handler class="haxe.ui.backend.hxwidgets.handlers.TextCtrlHandler" />
    </component>
    <component id="haxe.ui.components.TextArea" class="hx.widgets.TextCtrl" constructor="null, $style" allowChildren="false" style="TextCtrlStyle.MULTILINE, TextCtrlStyle.HSCROLL">
        <behaviour id="text" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="wrap" class="haxe.ui.backend.hxwidgets.behaviours.TextCtrlWordWrap" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <event id="change" native="EventType.TEXT" />
        <handler class="haxe.ui.backend.hxwidgets.handlers.TextCtrlHandler" />
    </component>
    <component id="haxe.ui.components.HorizontalRange" class="hx.widgets.Gauge" constructor="100, $style" allowChildren="false">
        <behaviour id="end" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
    </component>
    <component id="haxe.ui.components.VerticalRange" class="hx.widgets.Gauge" constructor="100, $style" allowChildren="false" style="GaugeStyle.VERTICAL">
        <behaviour id="end" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
    </component>
    <component id="haxe.ui.components.HorizontalProgress" class="hx.widgets.Gauge" constructor="100, $style" allowChildren="false">
        <behaviour id="end" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="max" class="haxe.ui.backend.hxwidgets.behaviours.ControlMax" />
        <behaviour id="indeterminate" class="haxe.ui.backend.hxwidgets.behaviours.ControlPulse" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
    </component>
    <component id="haxe.ui.components.VerticalProgress" class="hx.widgets.Gauge" constructor="100, $style" allowChildren="false" style="GaugeStyle.VERTICAL">
        <behaviour id="end" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="max" class="haxe.ui.backend.hxwidgets.behaviours.ControlMax" />
        <behaviour id="indeterminate" class="haxe.ui.backend.hxwidgets.behaviours.ControlPulse" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
    </component>
    
    <component id="haxe.ui.components.HorizontalSlider" allowChildren="false" class="hx.widgets.Slider" constructor="0, 0, 100, $style">
        <behaviour id="end" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" />
        <behaviour id="start" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" />
        <behaviour id="pos" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="min" class="haxe.ui.backend.hxwidgets.behaviours.ControlMin" />
        <behaviour id="max" class="haxe.ui.backend.hxwidgets.behaviours.ControlMax" />
        <behaviour id="minorTicks" class="haxe.ui.backend.hxwidgets.behaviours.SliderTicks" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <handler class="haxe.ui.backend.hxwidgets.handlers.ReflectionHandler" event="EventType.SLIDER" sourceProp="value" targetProp="pos" />
        <event id="change" native="EventType.SLIDER" />
    </component>
    <component id="haxe.ui.components.VerticalSlider" class="hx.widgets.Slider" constructor="0, 0, 100, $style" allowChildren="false" style="SliderStyle.VERTICAL">
        <behaviour id="end" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" />
        <behaviour id="start" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" />
        <behaviour id="pos" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <behaviour id="min" class="haxe.ui.backend.hxwidgets.behaviours.ControlMin" />
        <behaviour id="max" class="haxe.ui.backend.hxwidgets.behaviours.ControlMax" />
        <behaviour id="minorTicks" class="haxe.ui.backend.hxwidgets.behaviours.SliderTicks" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <event id="change" native="EventType.SLIDER" />
    </component>
    <component id="haxe.ui.containers.TabView" class="hx.widgets.Notebook">
        <behaviour id="removeAllPages" class="haxe.ui.backend.hxwidgets.behaviours.NotebookRemoveAllPages" />
        <behaviour id="removePage" class="haxe.ui.backend.hxwidgets.behaviours.NotebookRemovePage" />
        <behaviour id="getPage" class="haxe.ui.backend.hxwidgets.behaviours.NotebookGetPage" />
        <behaviour id="pageCount" class="haxe.ui.backend.hxwidgets.behaviours.NotebookPageCount" />
        <behaviour id="pageIndex" class="haxe.ui.backend.hxwidgets.behaviours.NotebookPageIndex" />
        <behaviour id="selectedPage" class="haxe.ui.backend.hxwidgets.behaviours.NotebookSelectedPage" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <behaviour id="tabPosition" class="haxe.ui.behaviours.DefaultBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.NotebookSize" includePadding="false" />
        <event id="change" native="EventType.NOTEBOOK_PAGE_CHANGED" />
    </component>
    <component id="haxe.ui.containers.ScrollView" class="hx.widgets.ScrolledWindow">
        <behaviour id="contentLayoutName" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.WindowSize" includePadding="false" />
        <builder class="haxe.ui.backend.hxwidgets.builders.ScrollViewBuilder" />
    </component>
    <component id="haxe.ui.components.NumberStepper" class="hx.widgets.SpinCtrlDouble" allowChildren="false">
        <behaviour id="min" class="haxe.ui.backend.hxwidgets.behaviours.ControlMin" />
        <behaviour id="max" class="haxe.ui.backend.hxwidgets.behaviours.ControlMax" />
        <behaviour id="pos" class="haxe.ui.backend.hxwidgets.behaviours.ControlValue" />
        <behaviour id="step" class="haxe.ui.backend.hxwidgets.behaviours.ControlStep" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <event id="change" native="EventType.SPINCTRLDOUBLE" />
    </component>
    
    
    <component id="haxe.ui.containers.menus.MenuBar" class="hx.widgets.MenuBar" creator="haxe.ui.backend.hxwidgets.creators.MenuBarCreator">
        <behaviour id="text" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.ZeroSize" includePadding="false" />
    </component>
    <component id="haxe.ui.containers.menus.Menu" class="hx.widgets.Menu" creator="haxe.ui.backend.hxwidgets.creators.MenuCreator">
        <behaviour id="text" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.ZeroSize" includePadding="false" />
        <builder class="haxe.ui.backend.hxwidgets.builders.MenuBuilder" />
    </component>
    <component id="haxe.ui.containers.menus.MenuItem" class="hx.widgets.MenuItem" creator="haxe.ui.backend.hxwidgets.creators.MenuItemCreator" allowChildren="false">
        <behaviour id="disabled" class="haxe.ui.backend.hxwidgets.behaviours.MenuDisable" />
        <behaviour id="text" class="haxe.ui.backend.hxwidgets.behaviours.MenuItemLabel" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <behaviour id="icon" class="haxe.ui.backend.hxwidgets.behaviours.MenuItemBitmap" />
        <size class="haxe.ui.backend.hxwidgets.size.ZeroSize" includePadding="false" />
    </component>
    <component id="haxe.ui.containers.menus.MenuCheckBox" class="hx.widgets.MenuItem" creator="haxe.ui.backend.hxwidgets.creators.MenuItemCreator" allowChildren="false">
        <behaviour id="text" class="haxe.ui.backend.hxwidgets.behaviours.MenuItemLabel" />
        <behaviour id="selected" class="haxe.ui.backend.hxwidgets.behaviours.MenuItemSelected" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.ZeroSize" includePadding="false" />
    </component>
    <component id="haxe.ui.containers.menus.MenuOptionBox" class="hx.widgets.MenuItem" creator="haxe.ui.backend.hxwidgets.creators.MenuItemCreator" allowChildren="false">
        <behaviour id="text" class="haxe.ui.backend.hxwidgets.behaviours.MenuItemLabel" />
        <behaviour id="selected" class="haxe.ui.backend.hxwidgets.behaviours.MenuItemSelected" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.ZeroSize" includePadding="false" />
    </component>
    <component id="haxe.ui.containers.menus.MenuSeparator" class="hx.widgets.MenuItem" creator="haxe.ui.backend.hxwidgets.creators.MenuItemCreator" allowChildren="false">
        <behaviour id="text" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.ZeroSize" includePadding="false" />
    </component>
    <component id="haxe.ui.containers.properties.PropertyGrid" class="hx.widgets.PropertyGrid" constructor="$style" style="PropertyGridStyles.DEFAULT_STYLE, PropertyGridStyles.SPLITTER_AUTO_CENTER, PropertyGridStyles.LIMITED_EDITING">
        <behaviour id="contentLayoutName" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <builder class="haxe.ui.backend.hxwidgets.builders.PropertyGridBuilder" />
    </component>
    
    <component id="haxe.ui.containers.properties.PropertyGroup" creator="haxe.ui.backend.hxwidgets.creators.NullWindowCreator">
        <behaviour id="collapsed" class="haxe.ui.behaviours.DefaultBehaviour" />
        <builder class="haxe.ui.backend.hxwidgets.builders.PropertyGroupBuilder" />
    </component>
    
    <component id="haxe.ui.containers.properties.Property" allowChildren="false" creator="haxe.ui.backend.hxwidgets.creators.NullWindowCreator">
        <behaviour id="value" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="label" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="dataSource" class="haxe.ui.behaviours.DefaultBehaviour" />
    </component>

    <component id="haxe.ui.containers.Collapsible" class="hx.widgets.CollapsiblePane">
        <behaviour id="text" class="haxe.ui.backend.hxwidgets.behaviours.ControlLabel" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlLabel" />
        <behaviour id="collapsed" class="haxe.ui.behaviours.DefaultBehaviour" />
        <builder class="haxe.ui.backend.hxwidgets.builders.CollapsibleBuilder" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
    </component>

    <component id="haxe.ui.containers.Frame" class="hx.widgets.StaticBox">
        <behaviour id="text" class="haxe.ui.backend.hxwidgets.behaviours.ControlLabel" />
        <behaviour id="value" class="haxe.ui.backend.hxwidgets.behaviours.ControlLabel" />
        <behaviour id="icon" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="collapsible" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="collapsed" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
    </component>
    
    <component class="hx.widgets.StaticBitmap" creator="haxe.ui.backend.hxwidgets.creators.StaticBitmapCreator">
        <behaviour id="tooltip" class="haxe.ui.backend.hxwidgets.behaviours.ToolTipBehaviour" />
    </component>    
    
    <component id="haxe.ui.containers.CalendarView" class="hx.widgets.CalendarCtrl">
        <behaviour id="selectedDate" class="haxe.ui.backend.hxwidgets.behaviours.CalendarCtrlDateBehaviour" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <size class="haxe.ui.backend.hxwidgets.size.BestSize" includePadding="false" />
        <event id="change" native="EventType.CALENDAR_SEL_CHANGED" />
    </component>
    
    <component id="haxe.ui.components.HorizontalRule" class="hx.widgets.StaticLine">
    </component>    
    
    <component id="haxe.ui.components.VerticalRule" class="hx.widgets.StaticLine" style="StaticLineStyle.VERTICAL">
    </component>    
</native>
